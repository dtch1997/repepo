name: "ci"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.repository_owner }}-${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PYTHONUNBUFFERED: "1"

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install PDM
        run: python -m pip install pdm

      - name: Install dependencies
        run: pdm install

      - name: Lint
        run: pdm run pre-commit run --all-files

      - name: Type check
        run: pdm run pyright

      - name: Test
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: pdm run python -m pytest tests

  release:
    needs: lint_and_test
    permissions:
      contents: write
      id-token: write
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.0.7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # build and deploy docs to gh-pages
      # do this as part of the semantic release step to ensure version is bumped
